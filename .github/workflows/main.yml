on:
  push:
    tags:
      - "*.*.*" # Tag used to manage production versions
      - "*.*.*-RC" # Tag used to manage release candidate versions
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

# See https://docs.github.com/en/actions/using-jobs/using-concurrency
# Enforce 1 job running
concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    # Deploy only when a tag is specified
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    steps:

    # Pull the repository
    - name: Checkout repository
      uses: actions/checkout@v4

    # Get linux/arm64 emulator for buildx
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      with:
        image: tonistiigi/binfmt:qemu-v8.1.5

    # Create custom buildx profile including the linux/arm64 (linux/amd64 already included by default)
    - name: Set up Docker Buildx
      id: builder
      uses: docker/setup-buildx-action@v3

    # Login to Docker Registry for Private repository
    - name: Login to docker registry
      uses: docker/login-action@v3
      with:
        username: ${{secrets.DOCKERHUB_USERNAME}}
        password: ${{secrets.DOCKERHUB_TOKEN}}

    # Build images
    - name: Build Webapp Project image and push to Docker Hub
      shell: bash
      env:
        DOCKER_IMAGE: blueprint/blueprint-webapp
      run: |
        docker buildx use ${{steps.builder.outputs.name}}
        if [[ ${{ endsWith(github.ref, '-RC') }} == true ]]; then
          docker buildx build --builder=${{steps.builder.outputs.name}} --push --platform linux/amd64,linux/arm64 -t $DOCKER_IMAGE:$GITHUB_REF_NAME -t $DOCKER_IMAGE:latest-RC  -f ./build/docker-webapp .
        else
          docker buildx build --builder=${{steps.builder.outputs.name}} --push --platform linux/amd64,linux/arm64 -t $DOCKER_IMAGE:$GITHUB_REF_NAME-RC -t $DOCKER_IMAGE:latest-RC -t $DOCKER_IMAGE:$GITHUB_REF_NAME -t $DOCKER_IMAGE:latest -f ./build/docker-webapp .
        fi

    - name: Build Migrate Project image and push to Docker Hub
      shell: bash
      env:
        DOCKER_IMAGE: blueprint/blueprint-migrate
      run: |
        docker buildx use ${{steps.builder.outputs.name}}
        if [[ ${{ endsWith(github.ref, '-RC') }} == true ]]; then
          docker buildx build --builder=${{steps.builder.outputs.name}} --push --platform linux/amd64,linux/arm64 -t $DOCKER_IMAGE:$GITHUB_REF_NAME -t $DOCKER_IMAGE:latest-RC  -f ./build/docker-migrate .
        else
          docker buildx build --builder=${{steps.builder.outputs.name}} --push --platform linux/amd64,linux/arm64 -t $DOCKER_IMAGE:$GITHUB_REF_NAME-RC -t $DOCKER_IMAGE:latest-RC -t $DOCKER_IMAGE:$GITHUB_REF_NAME -t $DOCKER_IMAGE:latest -f ./build/docker-migrate .
        fi

    - name: Build CLI Project image and push to Docker Hub
      shell: bash
      env:
        DOCKER_IMAGE: blueprint/blueprint-cli
      run: |
        docker buildx use ${{steps.builder.outputs.name}}
        if [[ ${{ endsWith(github.ref, '-RC') }} == true ]]; then
          docker buildx build --builder=${{steps.builder.outputs.name}} --push --platform linux/amd64,linux/arm64 -t $DOCKER_IMAGE:$GITHUB_REF_NAME -t $DOCKER_IMAGE:latest-RC  -f ./build/docker-cli .
        else
          docker buildx build --builder=${{steps.builder.outputs.name}} --push --platform linux/amd64,linux/arm64 -t $DOCKER_IMAGE:$GITHUB_REF_NAME-RC -t $DOCKER_IMAGE:latest-RC -t $DOCKER_IMAGE:$GITHUB_REF_NAME -t $DOCKER_IMAGE:latest -f ./build/docker-cli .
        fi